name: build
on:
  push:
  workflow_dispatch:
  schedule:
    #- cron: '0 * * * *' # hourly.
    - cron: '0 0 * * WED' # every wednesday.
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: windows-11
          - name: windows-2022
          - name: windows-2025
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: pwsh scrape.ps1 ${{ matrix.name }}
      - name: Build summary
        run: |
          $iso = Get-Content (Resolve-Path data/${{ matrix.name }}.json) | ConvertFrom-Json
          Add-Content $env:GITHUB_STEP_SUMMARY @"
          | Property | Value |
          | :--- | :--- |
          | Name | $($iso.name) |
          | Version | $($iso.images.version | Select-Object -First 1) |
          | Created At | $($iso.createdAt.ToString('O')) |
          | Iso | [$(Split-Path -Leaf $iso.url)]($($iso.url)) |
          | Checksum | $($iso.checksum) |
          | Size | $($iso.size) |
          $(($iso.images | ForEach-Object {"| Image #$($_.index) Name | $($_.name) |"}) -join "`n")
          "@
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            data/${{ matrix.name }}.json
  commit:
    if: github.event.schedule
    name: Commit
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: data
      - name: Commit data
        shell: bash
        run: |
          set -euxo pipefail
          mv data/*/* data
          if [ -n "$(git status -s data)" ]; then
            git config user.name 'Bot'
            git config user.email 'bot@localhost'
            echo 'Committing data...'
            git add data
            git diff --staged
            git commit -m 'update iso data'
            git push
          fi
